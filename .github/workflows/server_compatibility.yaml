name: Test Server Backwards Compatibility

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: Name of the branch to build JARs from
        required: true
        default: master
      hz_version:
        description: Version of the JARs that will be built, without the SNAPSHOT suffix.
        required: true
        default: 5.0
      run_python:
        description: Whether or not to run Python client tests. Set to something else to not run the tests.
        required: true
        default: run
      run_nodejs:
        description: Whether or not to run Node.js client tests. Set to something else to not run the tests.
        required: true
        default: run
      run_cpp:
        description: Whether or not to run CPP client tests. Set to something else to not run the tests.
        required: true
        default: run
      run_csharp:
        description: Whether or not to run Csharp client tests. Set to something else to not run the tests.
        required: true
        default: run
      run_go:
        description: Whether or not to run Go client tests. Set to something else to not run the tests.
        required: true
        default: run
jobs:
  setup_python_client_matrix:
    name: Setup the Python client test matrix
    if: ${{ github.event.inputs.run_python == 'run' }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Checkout to scripts
        uses: actions/checkout@v2
      - name: Set client matrix
        id: set-matrix
        run: echo "::set-output name=matrix::$( python get_client_matrix.py --client py --option tag )"
  test_python_clients:
    needs: [ setup_python_client_matrix ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        client_tag: ${{ fromJson(needs.setup_python_client_matrix.outputs.matrix) }}
        server_kind: [ os, enterprise ]
    name: Test Python client ${{ matrix.client_tag }} with ${{ matrix.server_kind }} server
    steps:
      - name: Checkout to scripts
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Checkout to master
        uses: actions/checkout@v2
        with:
          repository: alisengul53/hazelcast-python-client
          path: fix_for_backward_compatibility
          ref: fix_for_backward_compatibility
      - name: Checkout to tag
        uses: actions/checkout@v2
        with:
          repository: hazelcast/hazelcast-python-client
          path: tag
          ref: ${{ matrix.client_tag }}
      - name: Copy the client code into master
        run: |
          rm -rf $GITHUB_WORKSPACE/fix_for_backward_compatibility/hazelcast
          cp -a $GITHUB_WORKSPACE/tag/hazelcast $GITHUB_WORKSPACE/fix_for_backward_compatibility/hazelcast
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt
        working-directory: fix_for_backward_compatibility
      - name: Start RC
        env:
          HAZELCAST_ENTERPRISE_KEY: ${{ secrets.HAZELCAST_ENTERPRISE_KEY }}
        run: python start_remote_controller.py --use-simple-server
      - name: Run non-enterprise tests
        if: ${{ matrix.server_kind == 'os' }}
        run: pytest -m 'not enterprise' tests/integration/backward_compatible
        working-directory: fix_for_backward_compatibility
      - name: Run all tests
        if: ${{ matrix.server_kind == 'enterprise' }}
        run: pytest tests/integration/backward_compatible
        working-directory: fix_for_backward_compatibility
